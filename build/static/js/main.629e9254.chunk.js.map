{"version":3,"sources":["components/messageForm.js","components/myMessage.js","components/theirMessage.js","components/spinner.js","components/ChatFeed.js","components/loginForm.js","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","creds","chatId","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","loader","height","width","margin","timeout","Component","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","renderMessages","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.629e9254.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage , isTyping} from 'react-chat-engine';\r\nimport {SendOutlined , PictureOutlined} from '@ant-design/icons'\r\n\r\nconst MessageForm=(props)=>{\r\n    const [value,setValue] = useState('');\r\n    const { creds , chatId } = props;\r\n\r\n    \r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const text = value.trim();\r\n        if (text.length > 0) sendMessage(creds,chatId, {text});\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (e)=>{\r\n        setValue(e.target.value);\r\n        isTyping(props , chatId)\r\n    }\r\n\r\n    const handleUpload = (e)=>{\r\n        sendMessage(creds , chatId , {files: e.target.files , text:''})\r\n    }\r\n\r\n    return(\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n        <input className='message-input' \r\n        placeholder=\"Send Message ,,,\" \r\n        value={value} \r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        />\r\n        <label htmlFor='upload-button'>\r\n            <span className='image-button' > \r\n            <PictureOutlined \r\n            className='Picture-icon'\r\n            />\r\n            </span>\r\n        </label>\r\n        <input \r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{display: 'none'}}\r\n        onChange={handleUpload}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\" ><SendOutlined className='send-icon'/></button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage=({message})=>{\r\n    if (message?.attachments?.length >0){\r\n    return( \r\n        <img\r\n        src={message.attachments[0].file}\r\n        alt='message-attachment'\r\n        className='message-image'\r\n        style={{ float:'right' }}\r\n        />\r\n    )\r\n}\r\n    return(\r\n        <div className='message' \r\n        style={{float:'right' , marginRight:'18px' , color:'white' , backgroundColor:'#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyMessage;","const TheirMessage=({lastMessage , message})=>{\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n\r\n    return(\r\n        <div className='message-row'>\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                className='message-avatar'\r\n                style={{backgroundImage:`url (${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n\r\n            {\r\n            message?.attachments?.length >0 ?\r\n                ( \r\n                <img\r\n                src={message.attachments[0].file}\r\n                alt='message-attachment'\r\n                className='message-image'\r\n                style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}/>) : \r\n                (\r\n                <div className='message' \r\n                style={{\r\n                float:'left' , backgroundColor:'#CABCDC' , marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                    {message.text}\r\n                </div>\r\n            )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import Loader from \"react-loader-spinner\";\r\nimport { Component } from 'react'\r\n\r\nclass loader extends Component {\r\n  //other logic\r\n    render() {\r\n    return (\r\n        <div className=\"center\">\r\n    <Loader\r\n        type=\"Puff\"\r\n        color=\"rgb(117,84,160)\"\r\n        height={100}\r\n        width={100}\r\n        margin={0}\r\n        timeout={3000} //3 secs\r\n    />\r\n    </div>\r\n    );\r\n}\r\n}\r\nexport default loader;","// import React from 'react'\r\nimport MessageForm from './messageForm';\r\nimport MyMessage from './myMessage';\r\nimport TheirMessage from './theirMessage';\r\nimport Loader from './spinner';\r\n\r\nconst ChatFeed =(props)=>{\r\n    // destructring\r\n    const { chats,activeChat,userName,messages } = props;\r\n    const chat = chats&&chats[activeChat];\r\n\r\n    //read receipts\r\n    const renderReadReceipts = (message , isMyMessage)=>{\r\n        return chat.people.map((person,index)=>person.last_read === message.id && (\r\n            <div \r\n            key={`read ${index}`}\r\n            className='read-receipt'\r\n            style={{\r\n                float:isMyMessage ?'right' : 'left',\r\n                backgroundImage:`url(${person?.person?.avatar})`\r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    //fetching messages\r\n    const renderMessages=()=>{\r\n        const keys= Object.keys(messages)\r\n        return keys.map((key,index)=>{\r\n            const message=messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage =  userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message}/>\r\n                            : <TheirMessage  message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                        <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px'\r\n                        , marginLeft: isMyMessage ? '0px' : '68px'\r\n                    }}>\r\n                        {renderReadReceipts(message , isMyMessage)}\r\n                        </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    \r\n\r\n    if(!chat) return (\r\n    <Loader />\r\n    )\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\" >\r\n                    {chat.people.map((person)=> `${person.person.username +' ... '}  `)}\r\n                </div>\r\n            </div>\r\n        {renderMessages()}\r\n        <div style={{height:'110px'}} />\r\n        <div className=\"message-form-container\">\r\n            <MessageForm\r\n                {...props}\r\n                chatId={activeChat}\r\n            />\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ChatFeed","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm =()=>{\r\n    const [username , setUsername ] =useState('');\r\n    const [password , setPassword] =useState('');\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit =async (e)=>{\r\n        e.preventDefault();\r\n        const authObject = { 'Project-Id':'f28adb50-6228-4ab7-9280-f19e2b22df4c', 'User-Name':username , 'User-Secret':password };\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats' , {headers:authObject});\r\n            localStorage.setItem('username',username);\r\n            localStorage.setItem('password',password);\r\n            window.location.reload();\r\n        }catch(error){\r\n            setError('There is something wrong ,Please try again !!')\r\n        }\r\n    }\r\n    return (\r\n        <div className='wrapper'>\r\n\r\n        <div className='form'>\r\n        <h1 className='title'> chat App </h1>\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text' value={username} onChange={(e)=>{\r\n                setUsername(e.target.value)\r\n            }} className='input' placeholder='UserName...' required/>\r\n\r\n            <input type='password' value={password} onChange={(e)=>{\r\n                setPassword(e.target.value)\r\n            }} className='input' placeholder='Password...' required/>\r\n            <div align='center'><button type='submit' className='button'>\r\n                <span>Start Chatting</span>\r\n                </button>\r\n                <h2 className='error'>{error}</h2>\r\n                </div>\r\n        </form>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default LoginForm;","import React from 'react'\nimport './app.css' \nimport ChatFeed from './components/ChatFeed'\nimport LoginForm from './components/loginForm'\nimport {ChatEngine} from 'react-chat-engine'\n\nconst App= ()=>{\n\n  if(!localStorage.getItem('username')){\n    return <LoginForm />\n  }\n\n  return ( \n    <ChatEngine \n      height='100vh'\n      projectID='f28adb50-6228-4ab7-9280-f19e2b22df4c'\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps)=> <ChatFeed {...chatAppProps} /> }\n\n    />\n    // <div className=\"App\">\n    //   <h1>ggggggggggg</h1>\n    // </div>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {createStore} from 'redux';\n// import {Provider} from 'react-redux'\nimport App from './App';\n\n\n\nReactDOM.render(\n<App />\n, \ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}