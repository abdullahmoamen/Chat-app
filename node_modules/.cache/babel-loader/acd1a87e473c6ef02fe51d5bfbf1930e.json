{"ast":null,"code":"import _objectSpread from\"C:/Users/Abdullah/Desktop/chatApp_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// import React from 'react'\nimport MessageForm from'./messageForm';import MyMessage from'./myMessage';import TheirMessage from'./theirMessage';import Loader from'./spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatFeed=function ChatFeed(props){// destructring\nvar chats=props.chats,activeChat=props.activeChat,userName=props.userName,messages=props.messages;var chat=chats&&chats[activeChat];//read receipts\nvar renderReadReceipts=function renderReadReceipts(message,isMyMessage){return chat.people.map(function(person,index){var _person$person;return person.last_read===message.id&&/*#__PURE__*/_jsx(\"div\",{className:\"read-receipt\",style:{float:isMyMessage?'right':'left',backgroundImage:\"url(\".concat(person===null||person===void 0?void 0:(_person$person=person.person)===null||_person$person===void 0?void 0:_person$person.avatar,\")\")}},\"read \".concat(index));});};//fetching messages\nvar renderMessages=function renderMessages(){var keys=Object.keys(messages);return keys.map(function(key,index){var message=messages[key];var lastMessageKey=index===0?null:keys[index-1];var isMyMessage=userName===message.sender.username;return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-block\",children:isMyMessage?/*#__PURE__*/_jsx(MyMessage,{message:message}):/*#__PURE__*/_jsx(TheirMessage,{message:message,lastMessage:messages[lastMessageKey]})}),/*#__PURE__*/_jsx(\"div\",{className:\"read-receipts\",style:{marginRight:isMyMessage?'18px':'0px',marginLeft:isMyMessage?'0px':'68px'},children:renderReadReceipts(message,isMyMessage)})]},\"msg_\".concat(index));});};if(!chat)return/*#__PURE__*/_jsx(Loader,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",children:chat.title}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-subtitle\",children:chat.people.map(function(person){return\"\".concat(person.person.username+' ... ',\"  \");})})]}),renderMessages(),/*#__PURE__*/_jsx(\"div\",{style:{height:'110px'}}),/*#__PURE__*/_jsx(\"div\",{className:\"message-form-container\",children:/*#__PURE__*/_jsx(MessageForm,_objectSpread(_objectSpread({},props),{},{chatId:activeChat}))})]});};export default ChatFeed;","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/chatApp_React/src/components/ChatFeed.js"],"names":["MessageForm","MyMessage","TheirMessage","Loader","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["// import React from 'react'\r\nimport MessageForm from './messageForm';\r\nimport MyMessage from './myMessage';\r\nimport TheirMessage from './theirMessage';\r\nimport Loader from './spinner';\r\n\r\nconst ChatFeed =(props)=>{\r\n    // destructring\r\n    const { chats,activeChat,userName,messages } = props;\r\n    const chat = chats&&chats[activeChat];\r\n\r\n    //read receipts\r\n    const renderReadReceipts = (message , isMyMessage)=>{\r\n        return chat.people.map((person,index)=>person.last_read === message.id && (\r\n            <div \r\n            key={`read ${index}`}\r\n            className='read-receipt'\r\n            style={{\r\n                float:isMyMessage ?'right' : 'left',\r\n                backgroundImage:`url(${person?.person?.avatar})`\r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    //fetching messages\r\n    const renderMessages=()=>{\r\n        const keys= Object.keys(messages)\r\n        return keys.map((key,index)=>{\r\n            const message=messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage =  userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message}/>\r\n                            : <TheirMessage  message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                        <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px'\r\n                        , marginLeft: isMyMessage ? '0px' : '68px'\r\n                    }}>\r\n                        {renderReadReceipts(message , isMyMessage)}\r\n                        </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    \r\n\r\n    if(!chat) return (\r\n    <Loader />\r\n    )\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\" >\r\n                    {chat.people.map((person)=> `${person.person.username +' ... '}  `)}\r\n                </div>\r\n            </div>\r\n        {renderMessages()}\r\n        <div style={{height:'110px'}} />\r\n        <div className=\"message-form-container\">\r\n            <MessageForm\r\n                {...props}\r\n                chatId={activeChat}\r\n            />\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ChatFeed"]},"metadata":{},"sourceType":"module"}