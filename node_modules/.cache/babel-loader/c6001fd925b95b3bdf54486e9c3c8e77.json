{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\chatApp_React\\\\src\\\\components\\\\ChatFeed.js\";\n// import React from 'react'\nimport MessageForm from './messageForm';\nimport MyMessage from './myMessage';\nimport TheirMessage from './theirMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  // destructring\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat]; //read receipts\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    chat.people.map((person, index) => person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-receipt\",\n      style: {\n        float: isMyMessage ? 'right' : 'left',\n        background\n      }\n    }, `read ${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this));\n  }; //fetching messages\n\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: \"read-receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  if (!chat) return 'Loading.........';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => `${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '110px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/chatApp_React/src/components/ChatFeed.js"],"names":["MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","background","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAD,IAAS;AACrB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAAQC,IAAAA,UAAR;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA;AAA5B,MAAyCJ,KAA/C;AACA,QAAMK,IAAI,GAAGJ,KAAK,IAAEA,KAAK,CAACC,UAAD,CAAzB,CAHqB,CAKrB;;AACA,QAAMI,kBAAkB,GAAG,CAACC,OAAD,EAAWC,WAAX,KAAyB;AAChDH,IAAAA,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgB,CAACC,MAAD,EAAQC,KAAR,KAAgBD,MAAM,CAACE,SAAP,KAAqBN,OAAO,CAACO,EAA7B,iBAC5B;AAEA,MAAA,SAAS,EAAC,cAFV;AAGA,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAACP,WAAW,GAAE,OAAF,GAAY,MAD1B;AAEHQ,QAAAA;AAFG;AAHP,OACM,QAAOJ,KAAM,EADnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,CANqB,CAmBrB;;;AACA,QAAMK,cAAc,GAAC,MAAI;AACrB,UAAMC,IAAI,GAAEC,MAAM,CAACD,IAAP,CAAYd,QAAZ,CAAZ;AACA,WAAOc,IAAI,CAACR,GAAL,CAAS,CAACU,GAAD,EAAKR,KAAL,KAAa;AACzB,YAAML,OAAO,GAACH,QAAQ,CAACgB,GAAD,CAAtB;AACA,YAAMC,cAAc,GAAGT,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqBM,IAAI,CAACN,KAAK,GAAC,CAAP,CAAhD;AACA,YAAMJ,WAAW,GAAIL,QAAQ,KAAKI,OAAO,CAACe,MAAR,CAAeC,QAAjD;AAEA,0BACI;AAA0B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAjC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQhB,WAAW,gBAAG,QAAC,SAAD;AAAW,YAAA,OAAO,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAH,gBACT,QAAC,YAAD;AAAe,YAAA,OAAO,EAAEA,OAAxB;AAAiC,YAAA,WAAW,EAAEH,QAAQ,CAACiB,cAAD;AAAtD;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOQ;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAACI,YAAAA,WAAW,EAAEjB,WAAW,GAAG,MAAH,GAAY,KAArC;AACpCkB,YAAAA,UAAU,EAAElB,WAAW,GAAG,KAAH,GAAW;AADE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPR;AAAA,SAAW,OAAMI,KAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KApBM,CAAP;AAqBH,GAvBD;;AA0BA,MAAG,CAACP,IAAJ,EAAU,OAAO,kBAAP;AACV,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKA,IAAI,CAACsB;AADV;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKtB,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAiBC,MAAD,IAAY,GAAEA,MAAM,CAACA,MAAP,CAAcY,QAAS,EAArD;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASCN,cAAc,EATf,eAUA;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,MAAM,EAAC;AAAR;AAAZ;AAAA;AAAA;AAAA;AAAA,YAVA,eAWA;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI,QAAC,WAAD,OACQ5B,KADR;AAEI,QAAA,MAAM,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CApED;;KAAMH,Q;AAqEN,eAAeA,QAAf","sourcesContent":["// import React from 'react'\r\nimport MessageForm from './messageForm';\r\nimport MyMessage from './myMessage';\r\nimport TheirMessage from './theirMessage';\r\n\r\nconst ChatFeed =(props)=>{\r\n    // destructring\r\n    const { chats,activeChat,userName,messages } = props;\r\n    const chat = chats&&chats[activeChat];\r\n\r\n    //read receipts\r\n    const renderReadReceipts = (message , isMyMessage)=>{\r\n        chat.people.map((person,index)=>person.last_read === message.id && (\r\n            <div \r\n            key={`read ${index}`}\r\n            className='read-receipt'\r\n            style={{\r\n                float:isMyMessage ?'right' : 'left',\r\n                background\r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    //fetching messages\r\n    const renderMessages=()=>{\r\n        const keys= Object.keys(messages)\r\n        return keys.map((key,index)=>{\r\n            const message=messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage =  userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message}/>\r\n                            : <TheirMessage  message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                        <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px'\r\n                        , marginLeft: isMyMessage ? '0px' : '68px'\r\n                    }}>\r\n                        read-receipts\r\n                        </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    \r\n\r\n    if(!chat) return 'Loading.........'\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\" >\r\n                    {chat.people.map((person)=> `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n        {renderMessages()}\r\n        <div style={{height:'110px'}} />\r\n        <div className=\"message-form-container\">\r\n            <MessageForm\r\n                {...props}\r\n                chatId={activeChat}\r\n            />\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ChatFeed"]},"metadata":{},"sourceType":"module"}